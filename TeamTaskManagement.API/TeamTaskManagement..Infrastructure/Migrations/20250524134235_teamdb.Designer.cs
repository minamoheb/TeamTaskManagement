// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamTaskManagement.Infrastructure;

#nullable disable

namespace TeamTaskManagement.Infrastructure.Migrations
{
    [DbContext(typeof(TeamTaskServicesDBContext))]
    [Migration("20250524134235_teamdb")]
    partial class teamdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.LookupItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("LookupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAR")
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("LookupId");

                    b.ToTable("LookupItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9845),
                            IsActive = true,
                            LookupId = 1L,
                            NameAR = "مفتوح",
                            NameEn = "Open"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9855),
                            IsActive = true,
                            LookupId = 1L,
                            NameAR = "قيد التنفيذ",
                            NameEn = "In Progress"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9857),
                            IsActive = true,
                            LookupId = 1L,
                            NameAR = "مغلق",
                            NameEn = "Closed"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9859),
                            IsActive = true,
                            LookupId = 2L,
                            NameAR = "منخفض",
                            NameEn = "Low"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9861),
                            IsActive = true,
                            LookupId = 2L,
                            NameAR = "متوسط",
                            NameEn = "Medium"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9907),
                            IsActive = true,
                            LookupId = 2L,
                            NameAR = "مرتفع",
                            NameEn = "High"
                        });
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.Lookups", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Lookups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9369),
                            IsActive = true,
                            Name = "Status",
                            NameAR = "الحالة"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2025, 5, 24, 16, 42, 35, 121, DateTimeKind.Local).AddTicks(9422),
                            IsActive = true,
                            Name = "Priority",
                            NameAR = "الأولوية"
                        });
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.Tasks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PriorityId")
                        .HasColumnType("bigint");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.LookupItems", b =>
                {
                    b.HasOne("TeamTaskManagement.Core.Entities.Lookups", "Lookups")
                        .WithMany("LookupItems")
                        .HasForeignKey("LookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lookups");
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.Tasks", b =>
                {
                    b.HasOne("TeamTaskManagement.Core.Entities.LookupItems", "Priority")
                        .WithMany("Priority")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TeamTaskManagement.Core.Entities.LookupItems", "Status")
                        .WithMany("Status")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Priority");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.LookupItems", b =>
                {
                    b.Navigation("Priority");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TeamTaskManagement.Core.Entities.Lookups", b =>
                {
                    b.Navigation("LookupItems");
                });
#pragma warning restore 612, 618
        }
    }
}
